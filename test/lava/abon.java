  import java . io . IOException ; import java . io . Writer ; import java . io . StringWriter ; import java . io . FileWriter ; import java . io . File ; import java . sql . SQLException ; import java . sql . ResultSet ; import java . sql . ResultSetMetaData ; import java . util . Map ; import java . util . List ; import java . util . ArrayList ; import java . util . Hashtable ; @ SuppressWarnings ( "unchecked" ) public class abon    { private static final Markup  $nil = new  Markup  (  ) { public  void render (  Writer  $out ) throws IOException  , SQLException  {  } } ; public static  void main (  String  args [ ] ) throws IOException  , SQLException  { new  abon  (  )  .  generateSite (  ) ; } public  void generateSite (  String  root ) throws IOException  , SQLException  {  Writer  writer ; writer = new  FileWriter  ( new  File  ( root , "site/abonnementen.html" )  )  ; new  Markup  (  ) { public  void render (  Writer  $out ) throws IOException  , SQLException  { $out . write ( "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n" ) ; abonnementen ( $out , $nil ) ; } } .  render ( writer ) ; writer . close (  ) ; } public  void generateSite (  ) throws IOException  , SQLException  { generateSite ( "." ) ; } private  void abonnementen ( final Writer  $out , final Markup  $markup ) throws IOException  , SQLException  { $out . write ( "<layout>" ) ; $out . write ( "<single-column>" ) ; $out . write ( "<" + "header" ) ; $out . write ( " value=\"" + "Abonnee worden?" + "\"" ) ; ; $out . write ( " />" ) ; $out . write ( "<p>" ) ; $out . write ( "Voor 30 euro krijg je een jaargang van ons literaire tijdschrift\n	  thuisgestuurd. Draag je Lava een extra warm hart toe? Neem dan voor\n	  40 euro een steunabonnement.  Je kunt natuurlijk ook een abonnement\n	  cadeau doen." ) ; $out . write ( "</p>" ) ; $out . write ( "<p>" ) ; $out . write ( "Je kunt je abonneren door:" ) ; $out . write ( "<ul>" ) ; $out . write ( "<li>" ) ; $out . write ( "een email te sturen naar\n	    " ) ; $out . write ( "<a" ) ; $out . write ( " href=\"" + "mailto:info@spabonneeservice.nl" + "\"" ) ; $out . write ( ">" ) ; $out . write ( "info@spabonneeservice.nl" ) ; $out . write ( "</a>" ) ; $out . write ( "; vermeld &quot;abonnement\n	    Lava&quot; en al je adresgegevens (ook je email-adres)." ) ; $out . write ( "</li>" ) ; $out . write ( "<li>" ) ; $out . write ( "te bellen tijdens werkdagen van 9.00-17.00 \n	    uur naar 0172 476 085;" ) ; $out . write ( "</li>" ) ; $out . write ( "</ul>" ) ; $out . write ( "</p>" ) ; $out . write ( "<p>" ) ; $out . write ( "Een acceptgiro voor betaling volgt. Alle portokosten zijn\n	  inbegrepen. Abonnementen worden stilzwijgend verlengd.\n	  Opzegging kan alleen schriftelijk geschieden\n	  v&oacute;&oacute;r toezending van het laatste nummer van\n	  iedere jaargang." ) ; $out . write ( "</p>" ) ; $out . write ( "<table>" ) ; { final Func2  td = new  Func2  (  ) { public  void call (  Writer  $out ,  Markup  $markup , final Object  img , final Object  alt ) throws IOException  , SQLException  { $out . write ( "<td>" ) ; $out . write ( "<" + "img" ) ; $out . write ( " " ) ; $out . write ( "width=\"" + "160" ) ; $out . write ( "\"" ) ; $out . write ( " " ) ; $out . write ( "height=\"" + "160" ) ; $out . write ( "\"" ) ; $out . write ( " " ) ; $out . write ( "alt=\"" + alt ) ; $out . write ( "\"" ) ; $out . write ( " src=\"" + img + "\"" ) ; ; $out . write ( " />" ) ; $out . write ( "</td>" ) ; } } ; $out . write ( "<tr>" ) ; td . call ( $out , $nil , "images/lavakaft_13-34.jpg" , "lava 13-34" ) ; td . call ( $out , $nil , "images/lavakaft_14-1.jpg" , "lava 14-1" ) ; td . call ( $out , $nil , "images/lavakaft_14-2.jpg" , "lava 14-2" ) ; $out . write ( "</tr>" ) ; } $out . write ( "</table>" ) ; $out . write ( "</single-column>" ) ; $out . write ( "</layout>" ) ; } public  void abonnementen ( final Writer  $out ) throws IOException  , SQLException  { abonnementen ( $out , $nil ) ; } }  interface Markup   { public  void render (  Writer  out ) throws IOException  , SQLException  ; }  interface Func10   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ,  Object  arg2 ,  Object  arg3 ,  Object  arg4 ,  Object  arg5 ,  Object  arg6 ,  Object  arg7 ,  Object  arg8 ,  Object  arg9 ,  Object  arg10 ) throws IOException  , SQLException  ; }  interface Func9   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ,  Object  arg2 ,  Object  arg3 ,  Object  arg4 ,  Object  arg5 ,  Object  arg6 ,  Object  arg7 ,  Object  arg8 ,  Object  arg9 ) throws IOException  , SQLException  ; }  interface Func8   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ,  Object  arg2 ,  Object  arg3 ,  Object  arg4 ,  Object  arg5 ,  Object  arg6 ,  Object  arg7 ,  Object  arg8 ) throws IOException  , SQLException  ; }  interface Func7   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ,  Object  arg2 ,  Object  arg3 ,  Object  arg4 ,  Object  arg5 ,  Object  arg6 ,  Object  arg7 ) throws IOException  , SQLException  ; }  interface Func6   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ,  Object  arg2 ,  Object  arg3 ,  Object  arg4 ,  Object  arg5 ,  Object  arg6 ) throws IOException  , SQLException  ; }  interface Func5   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ,  Object  arg2 ,  Object  arg3 ,  Object  arg4 ,  Object  arg5 ) throws IOException  , SQLException  ; }  interface Func4   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ,  Object  arg2 ,  Object  arg3 ,  Object  arg4 ) throws IOException  , SQLException  ; }  interface Func3   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ,  Object  arg2 ,  Object  arg3 ) throws IOException  , SQLException  ; }  interface Func2   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ,  Object  arg2 ) throws IOException  , SQLException  ; }  interface Func1   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ) throws IOException  , SQLException  ; }  interface Func0   { public  void call (  Writer  out ,  Markup  markup ) throws IOException  , SQLException  ; } 