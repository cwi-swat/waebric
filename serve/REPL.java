  import java . io . IOException ; import java . io . Writer ; import java . io . StringWriter ; import java . io . FileWriter ; import java . io . File ; import java . sql . SQLException ; import java . sql . ResultSet ; import java . sql . ResultSetMetaData ; import java . util . Map ; import java . util . List ; import java . util . ArrayList ; import java . util . Hashtable ; @ SuppressWarnings ( "unchecked" ) public class REPL    { private static final Markup  $nil = new  Markup  (  ) { public  void render (  Writer  $out ) throws IOException  , SQLException  {  } } ; public static  void main (  String  args [ ] ) throws IOException  , SQLException  { new  REPL  (  )  .  generateSite (  ) ; } public  void generateSite (  String  root ) throws IOException  , SQLException  {  Writer  writer ; } public  void generateSite (  ) throws IOException  , SQLException  { generateSite ( "." ) ; } private  void homePage ( final Writer  $out , final Markup  $markup , final Object  source ) throws IOException  , SQLException  { layout ( $out , new  Markup  (  ) { public  void render (  Writer  $out ) throws IOException  , SQLException  { inputForm ( $out , new  Markup  (  ) { public  void render (  Writer  $out ) throws IOException  , SQLException  { $out . write ( source .  toString (  ) ) ; } } ) ; } } ) ; } public  void homePage ( final Writer  $out , final Object  source ) throws IOException  , SQLException  { homePage ( $out , $nil , source ) ; } private  void errorPage ( final Writer  $out , final Markup  $markup , final Object  source , final Object  message ) throws IOException  , SQLException  { layout ( $out , new  Markup  (  ) { public  void render (  Writer  $out ) throws IOException  , SQLException  { inputForm ( $out , new  Markup  (  ) { public  void render (  Writer  $out ) throws IOException  , SQLException  { $out . write ( source .  toString (  ) ) ; } } ) ; $out . write ( "<" + "hr" ) ; $out . write ( " class=\"" + "space" + "\"" ) ; ; $out . write ( " />" ) ; errorMessage ( $out , $nil , message ) ; } } ) ; } public  void errorPage ( final Writer  $out , final Object  source , final Object  message ) throws IOException  , SQLException  { errorPage ( $out , $nil , source , message ) ; } private  void errorMessage ( final Writer  $out , final Markup  $markup , final Object  msg ) throws IOException  , SQLException  { $out . write ( "<h3>" ) ; $out . write ( "Error" ) ; $out . write ( "</h3>" ) ; $out . write ( "<code>" ) ; $out . write ( msg .  toString (  ) ) ; $out . write ( "</code>" ) ; } public  void errorMessage ( final Writer  $out , final Object  msg ) throws IOException  , SQLException  { errorMessage ( $out , $nil , msg ) ; } private  void resultPage ( final Writer  $out , final Markup  $markup , final Object  source , final Object  escapedResult , final Object  dataURI , final Object  ast ) throws IOException  , SQLException  { layout ( $out , new  Markup  (  ) { public  void render (  Writer  $out ) throws IOException  , SQLException  { $out . write ( "<div" ) ; $out . write ( " class=\"" + "span-12" + "\"" ) ; $out . write ( ">" ) ; $out . write ( "<h3>" ) ; $out . write ( "Input" ) ; $out . write ( "</h3>" ) ; inputForm ( $out , new  Markup  (  ) { public  void render (  Writer  $out ) throws IOException  , SQLException  { $out . write ( source .  toString (  ) ) ; } } ) ; $out . write ( "</div>" ) ; $out . write ( "<div" ) ; $out . write ( " " ) ; $out . write ( "class=\"" + "span-12" ) ; $out . write ( " " + "last" ) ; $out . write ( "\"" ) ; $out . write ( ">" ) ; $out . write ( "<h3>" ) ; $out . write ( "Output" ) ; $out . write ( "</h3>" ) ; escapedResult ( $out , $nil , escapedResult ) ; $out . write ( "</div>" ) ; $out . write ( "<" + "hr" ) ; $out . write ( " class=\"" + "space" + "\"" ) ; ; $out . write ( " />" ) ; $out . write ( "<div" ) ; $out . write ( " class=\"" + "span-12" + "\"" ) ; $out . write ( ">" ) ; $out . write ( "<h3>" ) ; $out . write ( "Preview" ) ; $out . write ( "</h3>" ) ; preview ( $out , $nil , dataURI ) ; $out . write ( "</div>" ) ; $out . write ( "<div" ) ; $out . write ( " " ) ; $out . write ( "class=\"" + "span-12" ) ; $out . write ( " " + "last" ) ; $out . write ( "\"" ) ; $out . write ( ">" ) ; $out . write ( "<h3>" ) ; $out . write ( "Abstract Syntax Tree" ) ; $out . write ( "</h3>" ) ; $out . write ( "<p>" ) ; $out . write ( ast .  toString (  ) ) ; $out . write ( "</p>" ) ; $out . write ( "</div>" ) ; } } ) ; } public  void resultPage ( final Writer  $out , final Object  source , final Object  escapedResult , final Object  dataURI , final Object  ast ) throws IOException  , SQLException  { resultPage ( $out , $nil , source , escapedResult , dataURI , ast ) ; } private  void escapedResult ( final Writer  $out , final Markup  $markup , final Object  result ) throws IOException  , SQLException  { $out . write ( "<code" ) ; $out . write ( " " ) ; $out . write ( "class=\"" + "prettyprint" ) ; $out . write ( " " + "lang-xhtml" ) ; $out . write ( "\"" ) ; $out . write ( ">" ) ; $out . write ( result .  toString (  ) ) ; $out . write ( "</code>" ) ; } public  void escapedResult ( final Writer  $out , final Object  result ) throws IOException  , SQLException  { escapedResult ( $out , $nil , result ) ; } private  void preview ( final Writer  $out , final Markup  $markup , final Object  dataURI ) throws IOException  , SQLException  { $out . write ( "<object" ) ; $out . write ( " " ) ; $out . write ( "id=\"" + "preview" ) ; $out . write ( "\"" ) ; $out . write ( " " ) ; $out . write ( "type=\"" + "text/html" ) ; $out . write ( "\"" ) ; $out . write ( " data=\"" + dataURI + "\"" ) ; $out . write ( ">" ) ; $out . write ( "<p>" ) ; $out . write ( "Something went wrong..." ) ; $out . write ( "</p>" ) ; $out . write ( "</object>" ) ; } public  void preview ( final Writer  $out , final Object  dataURI ) throws IOException  , SQLException  { preview ( $out , $nil , dataURI ) ; } private  void css ( final Writer  $out , final Markup  $markup , final Object  url , final Object  media ) throws IOException  , SQLException  { $out . write ( "<" + "link" ) ; $out . write ( " " ) ; $out . write ( "rel=\"" + "stylesheet" ) ; $out . write ( "\"" ) ; $out . write ( " " ) ; $out . write ( "href=\"" + url ) ; $out . write ( "\"" ) ; $out . write ( " " ) ; $out . write ( "type=\"" + "text/css" ) ; $out . write ( "\"" ) ; $out . write ( " media=\"" + media + "\"" ) ; ; $out . write ( " />" ) ; } public  void css ( final Writer  $out , final Object  url , final Object  media ) throws IOException  , SQLException  { css ( $out , $nil , url , media ) ; } private  void layout ( final Writer  $out , final Markup  $markup ) throws IOException  , SQLException  { $out . write ( "<html>" ) ; $out . write ( "<head>" ) ; $out . write ( "<" + "meta" ) ; $out . write ( " " ) ; $out . write ( "http-equiv=\"" + "content-type" ) ; $out . write ( "\"" ) ; $out . write ( " content=\"" + "text/html; charset=utf-8" + "\"" ) ; ; $out . write ( " />" ) ; $out . write ( "<" + "meta" ) ; $out . write ( " " ) ; $out . write ( "name=\"" + "keywords" ) ; $out . write ( "\"" ) ; $out . write ( " content=\"" + "Waebric, markup, DSL" + "\"" ) ; ; $out . write ( " />" ) ; $out . write ( "<" + "meta" ) ; $out . write ( " " ) ; $out . write ( "name=\"" + "description" ) ; $out . write ( "\"" ) ; $out . write ( " content=\"" + "Online Waebric evaluator" + "\"" ) ; ; $out . write ( " />" ) ; $out . write ( "<" + "meta" ) ; $out . write ( " " ) ; $out . write ( "name=\"" + "language" ) ; $out . write ( "\"" ) ; $out . write ( " content=\"" + "en" + "\"" ) ; ; $out . write ( " />" ) ; css ( $out , $nil , "blueprint/screen.css" , "screen, projection" ) ; css ( $out , $nil , "blueprint/print.css" , "print" ) ; $out . write ( "<!--[if IE]>-->" ) ; css ( $out , $nil , "blueprint/ie.css" , "screen, projection" ) ; $out . write ( "<!--<![endif]-->" ) ; css ( $out , $nil , "pretty/prettify.css" , "screen, projection" ) ; $out . write ( "<" + "script" ) ; $out . write ( " " ) ; $out . write ( "type=\"" + "text/javascript" ) ; $out . write ( "\"" ) ; $out . write ( " src=\"" + "pretty/prettify.js" + "\"" ) ; ; $out . write ( " />" ) ; css ( $out , $nil , "waebric.css" , "screen" ) ; $out . write ( "<title>" ) ; $out . write ( "Waebric REPL" ) ; $out . write ( "</title>" ) ; $out . write ( "</head>" ) ; $out . write ( "<body" ) ; $out . write ( " onload=\"" + "prettyPrint()" + "\"" ) ; $out . write ( ">" ) ; $out . write ( "<div" ) ; $out . write ( " class=\"" + "container" + "\"" ) ; $out . write ( ">" ) ; $markup . render ( $out ) ; $out . write ( "</div>" ) ; $out . write ( "</body>" ) ; $out . write ( "</html>" ) ; } public  void layout ( final Writer  $out ) throws IOException  , SQLException  { layout ( $out , $nil ) ; } private  void inputForm ( final Writer  $out , final Markup  $markup ) throws IOException  , SQLException  { $out . write ( "<form" ) ; $out . write ( " " ) ; $out . write ( "action=\"" + "/eval" ) ; $out . write ( "\"" ) ; $out . write ( " method=\"" + "post" + "\"" ) ; $out . write ( ">" ) ; $out . write ( "<textarea" ) ; $out . write ( " name=\"" + "source" + "\"" ) ; $out . write ( ">" ) ; $markup . render ( $out ) ; $out . write ( "</textarea>" ) ; $out . write ( "<" + "hr" ) ; $out . write ( " class=\"" + "space" + "\"" ) ; ; $out . write ( " />" ) ; $out . write ( "<" + "input" ) ; $out . write ( " " ) ; $out . write ( "name=\"" + "Submit" ) ; $out . write ( "\"" ) ; $out . write ( " " ) ; $out . write ( "type=\"" + "submit" ) ; $out . write ( "\"" ) ; $out . write ( " value=\"" + "Submit" + "\"" ) ; ; $out . write ( " />" ) ; $out . write ( "</form>" ) ; } public  void inputForm ( final Writer  $out ) throws IOException  , SQLException  { inputForm ( $out , $nil ) ; } }  interface Markup   { public  void render (  Writer  out ) throws IOException  , SQLException  ; }  interface Func10   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ,  Object  arg2 ,  Object  arg3 ,  Object  arg4 ,  Object  arg5 ,  Object  arg6 ,  Object  arg7 ,  Object  arg8 ,  Object  arg9 ,  Object  arg10 ) throws IOException  , SQLException  ; }  interface Func9   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ,  Object  arg2 ,  Object  arg3 ,  Object  arg4 ,  Object  arg5 ,  Object  arg6 ,  Object  arg7 ,  Object  arg8 ,  Object  arg9 ) throws IOException  , SQLException  ; }  interface Func8   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ,  Object  arg2 ,  Object  arg3 ,  Object  arg4 ,  Object  arg5 ,  Object  arg6 ,  Object  arg7 ,  Object  arg8 ) throws IOException  , SQLException  ; }  interface Func7   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ,  Object  arg2 ,  Object  arg3 ,  Object  arg4 ,  Object  arg5 ,  Object  arg6 ,  Object  arg7 ) throws IOException  , SQLException  ; }  interface Func6   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ,  Object  arg2 ,  Object  arg3 ,  Object  arg4 ,  Object  arg5 ,  Object  arg6 ) throws IOException  , SQLException  ; }  interface Func5   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ,  Object  arg2 ,  Object  arg3 ,  Object  arg4 ,  Object  arg5 ) throws IOException  , SQLException  ; }  interface Func4   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ,  Object  arg2 ,  Object  arg3 ,  Object  arg4 ) throws IOException  , SQLException  ; }  interface Func3   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ,  Object  arg2 ,  Object  arg3 ) throws IOException  , SQLException  ; }  interface Func2   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ,  Object  arg2 ) throws IOException  , SQLException  ; }  interface Func1   { public  void call (  Writer  out ,  Markup  markup ,  Object  arg1 ) throws IOException  , SQLException  ; }  interface Func0   { public  void call (  Writer  out ,  Markup  markup ) throws IOException  , SQLException  ; } 