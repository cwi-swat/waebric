module languages/waebric/syntax/Statements

imports languages/waebric/syntax/Expressions
        languages/waebric/syntax/Predicates
        languages/waebric/syntax/Markup
        basic/StrCon

hiddens
context-free start-symbols
  Statement

exports
sorts Statement Assignment Formals

context-free syntax 
  "if" "(" Predicate ")" Statement NoElseMayFollow  -> Statement  
  "if" "(" Predicate ")" Statement "else" Statement -> Statement  
  "each" "(" Var ":" Expression ")" Statement       -> Statement  
  "let" Assignment+ "in" Statement* "end"           -> Statement  
  "{" Statement* "}"     -> Statement  

context-free syntax
  "comment" StrCon ";"   -> Statement  
  "echo" Expression ";"  -> Statement  
  "echo" Embedding ";"  -> Statement  
  "cdata" Expression ";" -> Statement  
  "yield" ";"            -> Statement  

context-free priorities

context-free syntax
  Var "=" Expression ";" -> Assignment  

context-free syntax
  "if"      -> IdCon {reject} 
  "comment" -> IdCon {reject} 
  "echo"    -> IdCon {reject} 
  "cdata"   -> IdCon {reject} 
  "each"    -> IdCon {reject} 
  "let"     -> IdCon {reject} 
  "yield"   -> IdCon {reject} 

sorts NoElseMayFollow

context-free syntax
   -> NoElseMayFollow  

context-free restrictions
  NoElseMayFollow -/- [e].[l].[s].[e]

context-free syntax
  "(" {Var ","}* ")"          -> Formals   
  IdCon Formals "=" Statement -> Assignment  
  
